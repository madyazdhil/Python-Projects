Problem Solving||Evaluates the student's ability to diagnose and fix errors or bugs that occur during development. It includes logical thinking, creativity, and persistence in overcoming technical challenges.
Code Quality and Organization||Assesses how clean, readable, and well-organized the student's code is. This includes proper use of naming conventions, comments, modularity (functions, classes), and adherence to coding standards.
Technical Knowledge and Application||Measures how well the student understands the programming concepts and applies them correctly in projects. This can cover algorithms, data structures, databases, web development, or whichever technical area the course focuses on.
Innovation and Creativity||Looks at how the student goes beyond basic requirements, offering unique solutions, optimizing performance, or adding original features. It rewards initiative and creative thinking in software development.
Collaboration and Communication||Checks the student's ability to work effectively in a team, participate in discussions, explain their ideas clearly, and give/receive constructive feedback. Good communication is vital for professional software development.
